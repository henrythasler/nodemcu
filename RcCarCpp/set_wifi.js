const readline = require("readline");
const fs = require('fs');
const path = require('path');

const out_file = path.join("lib","config", "wifi_config.h");

const UPPER_LIMIT=94; //26; <-- standard OTP value
const SHIFT=32; //65; <-- standard OTP value
	
const pls = function(a,b) { return (a+b) % UPPER_LIMIT; }
function otp(input, key, fn) {
    if(input.length > key.length) {
        throw 'Key must be at least as long as text'
    }
    let encString = "";
    for(let i=0; i<input.length; i++) {
        const ic = input.charCodeAt(i)-SHIFT;
        const cc = key.charCodeAt(i)-SHIFT;
        const ch = (fn(ic,cc));
        encString += String.fromCharCode(ch+SHIFT);
    }
    return encString;
}
function doEncrypt(text, key) {
	return otp(text, key, pls);
}

function  storeNetwork(wifi_name, wifi_password) {
    console.log("- Store the WiFi credentials to file ...");

    let out_str = "// Generated by set_wifi.js!\n";
    out_str += "// Do not check in!!!\n";
    out_str += `const char *wifi_ssid = "${wifi_name}";\n`;
    out_str += `const char *wifi_password = "${wifi_password}";\n`;
    fs.writeFileSync(out_file, out_str);
    console.log("Wrote credentials to: ", out_file,"\nAll done\n");
    process.exit(0);
}

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});
rl._writeToOutput = function _writeToOutput(stringToWrite) {
    if (rl.stdoutMuted && stringToWrite != " ")
        rl.output.write("*");
    else
        rl.output.write(stringToWrite);
};

rl.question("Please insert your WiFi network name:\n", (wifi_name) => {
    console.log("=> ok, the network is: '" + wifi_name + "'\n");
   
    rl.history = rl.history.slice(1); 
    rl.stdoutMuted = true;
    console.log("Please insert your WiFi password:");
    rl.question("", (wifi_password) => {
        console.log("\n=> ok!\n");

        storeNetwork(wifi_name, wifi_password);
    });
});

rl.on("close", function() {
    console.log("\nBYE BYE !!!");
    process.exit(0);
});